server:
  port: 11013
app:
  ConnectTimeout: 100
  ReadTimeout: 5000
 
#子配置文件
spring.profiles.include: url
 
druid:
    dbType: dm
    url: jdbc:dm://${csse.dmdba.url}/ZF_MINISTRY_APP_DB
    username: ZF_MINISTRY_APP_DB
    password: QNKN1ReWghEU95X/pZmu4rWzAlA3t9ayTeqNTdUILuj3eyQsU1V4S543u0dPyoOFbxbMMWrtn7S+dAAo5Ed9LQ==
    initial-size: 1
    min-idle: 1
    max-active: 10 
    maxWait: 3000
    test-on-borrow: true
    testWhileIdle: true
    validationQuery: select 1 from DUAL 
    filters: config
    connectionProperties: config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIfduBXAcGaEuALCIFq8PUfhUdVfu+fJSb05UY8+de5qbHxK/hs0BEpzlinf9VXEZV6tifsclqVqD7ljrO0BBO8CAwEAAQ==

mybatis.configuration.mapUnderscoreToCamelCase: true

logging:
  file: ${csse.log.path}
  level:
#    root: info
    com: 
      css: debug

pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
spring:
  application:
    name: legacycpk.csse.zbfzbbgt_zyyy
  redis: 
    host: 172.16.4.3
    port: 6379
    timeout: 3000
    lettuce: 
      pool: 
#连接池最大链接数
        max-active: -1
#连接池最大阻塞等待时间
        max-wait: -1
#连接池最大空闲连接数 
        max-idle: 8
#连接池最小空闲连接数 
        min-idle: 3 
 
 
eureka:
  instance:
    prefer-ip-address: true
  client:
#此处为url网关开关
    enabled: false
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:18761/eureka/
  http:
    multipart:
      max-file-size: 256MB
      max-request-size: 256MB
      maxFileSize: 1024MB
      maxRequestSize: 1024MB

#单点登录配置（新）
csse:
  mircoservice:
    oauth2:
      client:
        accessTokenUri: ${csse.mircoservice.zuul}/api/uaa/oauth/token
        clientId: ${csse.qxj.appId}
        clientSecret: ${csse.qxj.appSecret}
    fileservice:
      servers: http://172.16.4.3:7003
      tempDirPath: c:/temp/storetemp/
  sso: 
    server: 
      url: ${csse.mircoservice.zuul}
      no-auth-suffixs: js,css,font,png,jpg,jpeg,htm,ico,pdf,ofd,wps,doc,noauth
      api: 
        checkToken: api/sso/valtoken/  
        userinfo: api/sso/user/

#消息格式
msg:
  type: document
  title: 
  platform: all
  visible: true
  icon: 
  appid: 
  redirect: 
  group: 
    name: 
    redirect: 
    
#文件服务配置
css.oauth2.accessTokenUri: ${csse.mircoservice.zuul}/api/uaa/oauth/token
css.oauth2.clientId: ${csse.qxj.appId}
css.oauth2.clientSecret: ${csse.qxj.appSecret}

#文件服务地址配置
css.fileService.host: ${csse.fileservice.domain}
css.fileService.protocol: http
css.fileService.port: ${csse.fileservice.port}

css.fileServcie.file.tempPath: ${csse.fileservice.tempPath}

css.fileService.file.request.uploadPath: /request/upload
css.fileService.file.downloadPath: /download
css.fileService.file.deletePath: /delete

css.fileService.file.fileInfo: /:fileId/info
css.fileService.file.fileMd5: /:fileId/info/md5

css.fileService.file.assignUploadPath: /assign/upload
css.fileService.file.assignUploadConfirmPath: /assign/uploadConfirm
css.fileService.file.assignDownloadPath: /assign/download
css.fileService.file.assignMd5Path: /assign/md5

#css.fileService.file.infoPath: 
css.fileService.file.namePath: /
css.fileService.file.updateNamePath: /updateName

#判断当前登录者是否为应用的管理员
csse.mircoservice.app: /api/app/application/manager
#组织机构增量同步接口
csse.mircoservice.syncdepartments: /api/org/syncdepartments

#数据库配置地址
csse.dmdba.url: 10.1.150.1:5236

#文件服务----------------------------------start
#文件服务的clientId,与公文处理应用进行共用；
csse.qxj.appId: legacycpk.csse.zbfzb_zyyy_app13m_qxjgl
csse.qxj.appSecret: 3ea2013a-8dc9-43b5-a426-3f3887e769f0
#文件服务所在的服务器ip或域名
csse.fileservice.domain: 172.16.4.3
#文件服务端口
csse.fileservice.port: 7003
#文件服务生成文件的临时目录
csse.fileservice.tempPath: c:/temp/storetemp/
#本地文件路径（应用中下载操作的默认文件保存路径）
filePath: D:/download/ 
#文件服务----------------------------------end

#本war的所有应用日志输出路径
csse.log.path: c:/temp/storetemp/qxj_app.log
#短信接口地址
csse.mircoservice.smsUrl: http://192.168.0.55:50005/v1.0/plan
#语音预定会议室 
voicePreMeetUrl: http://localhost:8768



#spring.redis.host: 127.0.0.1
#spring.redis.port: 6379
#spring.redis.password: foobared
#spring.redis.timeout: 10000
#spring.redis.database: 0
#
#spring.redis.pool.maxActive: 50
#spring.redis.pool.maxWait: 3000
#spring.redis.pool.maxIdle: 20
#spring.redis.pool.minIdle: 50

